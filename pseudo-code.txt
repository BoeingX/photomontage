Input: n images
Output: 1 image
VERSION I: horizontal well-ordered images, with less than 50% superposed area
1. Initialize an output with sufficiently large area, with 0 image on the left
2. Translation: Sub-patch matching using FFT-Based accelerating
3. Patch fitting using graph cuts: simple case -> accounting for old seams -> surround region

VERSION II: well-ordered images randomly placed (i.e. need to be rotated apart from translation), with less than 50% superposed area
1. Initialize an output with sufficiently large area, with 0 image on the left
2. Rotation: using homography to determine rotated images, more precisely, through relative position of corresponding pairs of points, determine rotation angle
3. Translation: Sub-patch matching using FFT-Based accelerating
4. Patch fitting using graph cuts: simple case -> accounting for old seams -> surround region

VERSION III (general version): unordered images randomly placed (i.e. need to be rotated apart from translation, need to determine order of images in the output image), with sometime more than 50% superposed area
1. Initialize an output with sufficiently large area, with 0 image at the center
2. Rotation: using homography to determine rotated images, more precisely, through relative position of corresponding pairs of points, determine rotation angle
3. Translation: Sub-patch matching using FFT-Based accelerating
4. Patch fitting using graph cuts: simple case -> accounting for old seams -> surround region

Refinement
1. Automatically remove black borders 
2. Automatically remove artificial trace such as noticeable difference of light using gradient-domain technique

Contribution:
1. Allow more potential transformation, in particular, the rotation. more efficient than the paper
2. Create more coherent output using gradient-domain
3. Detect black border and remove it